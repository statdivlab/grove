% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/check_binary.R
\name{check_binary}
\alias{check_binary}
\title{Check if binary 
Given a tree or set of trees, checks if it is binary, i.e. for a rooted tree with \code{n} tips it has \code{n - 1} internal nodes, 
for a unrooted tree with \code{n} tips it has \code{n - 2} internal nodes, and all internal edges have length 
greater than \code{0}.}
\usage{
check_binary(tree = NULL, tree_path = NULL)
}
\arguments{
\item{tree}{OPTIONAL, the tree(s) to check. Must be included if \code{tree_path} is not. Can be a phylo or 
multiPhylo object.}

\item{tree_path}{OPTIONAL, the path to the tree(s) to check. Must be included if \code{tree} is not.}
}
\value{
A boolean (or list of booleans), TRUE if the tree is binary.
}
\description{
Check if binary 
Given a tree or set of trees, checks if it is binary, i.e. for a rooted tree with \code{n} tips it has \code{n - 1} internal nodes, 
for a unrooted tree with \code{n} tips it has \code{n - 2} internal nodes, and all internal edges have length 
greater than \code{0}.
}
\examples{
path <- system.file("txt/tree1.txt", package = "groves")
tree <- ape::read.tree(path)
check_binary(tree)

}
